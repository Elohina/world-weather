{"ast":null,"code":"var _jsxFileName = \"/Users/el20064544/projects/dublin-weather/src/components/Forecast/Forecast.js\";\nimport React from \"react\";\nimport Card from \"../Card/Card\";\nimport styled from 'styled-components';\n\nconst Forecast = ({\n  forecast,\n  onChangeTime,\n  isToday\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, Object.keys(forecast).map((day, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: isToday(forecast[day][0].date_label) ? \"text-primary\" : \"text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, isToday(forecast[day][0].date_label) ? \"Today\" : new Intl.DateTimeFormat(\"en-GB\", {\n      weekday: \"short\"\n    }).format(new Date(forecast[day][0].dt_txt))), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, new Intl.DateTimeFormat(\"en-GB\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"2-digit\"\n    }).format(new Date(forecast[day][0].dt_txt))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      data: forecast[day][0],\n      onSelectCard: onChangeTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    })));\n  }));\n};\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/el20064544/projects/dublin-weather/src/components/Forecast/Forecast.js"],"names":["React","Card","styled","Forecast","forecast","onChangeTime","isToday","Object","keys","map","day","i","date_label","Intl","DateTimeFormat","weekday","format","Date","dt_txt","month","year"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AACxD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,GAAtB,CAA0B,CAACC,GAAD,EAAMC,CAAN,KAAY;AACrC,wBACE;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EACPL,OAAO,CAACF,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,EAAiBE,UAAlB,CAAP,GACI,cADJ,GAEI,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGN,OAAO,CAACF,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,EAAiBE,UAAlB,CAAP,GACG,OADH,GAEG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC/BC,MAAAA,OAAO,EAAE;AADsB,KAAjC,EAEGC,MAFH,CAEU,IAAIC,IAAJ,CAASb,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,EAAiBQ,MAA1B,CAFV,CATN,CADF,eAcE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,IAAIL,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCJ,MAAAA,GAAG,EAAE,SAD2B;AAEhCS,MAAAA,KAAK,EAAE,OAFyB;AAGhCC,MAAAA,IAAI,EAAE;AAH0B,KAAjC,EAIEJ,MAJF,CAIS,IAAIC,IAAJ,CAASb,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,EAAiBQ,MAA1B,CAJT,CADH,CAdF,eAqBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEP,CAAX;AAAc,MAAA,IAAI,EAAEP,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,CAApB;AAAsC,MAAA,YAAY,EAAEL,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CArBF,CADF;AAgCD,GAjCA,CADH,CADF;AAsCD,CAvCD;;AAyCA,eAAeF,QAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../Card/Card\";\nimport styled from 'styled-components';\n\nconst Forecast = ({ forecast, onChangeTime, isToday }) => { \n  return (\n    <div className=\"row\">\n      {Object.keys(forecast).map((day, i) => {\n        return (\n          <div key={i} className=\"col\">\n            <h3\n              className={\n                isToday(forecast[day][0].date_label)\n                  ? \"text-primary\"\n                  : \"text-dark\"\n              }\n            >\n              {isToday(forecast[day][0].date_label)\n                ? \"Today\"\n                : new Intl.DateTimeFormat(\"en-GB\", {\n                    weekday: \"short\",\n                  }).format(new Date(forecast[day][0].dt_txt))}\n            </h3>\n            <h5 className=\"text-muted\">\n              {new Intl.DateTimeFormat(\"en-GB\", {\n                day: \"numeric\",\n                month: \"short\",\n                year: \"2-digit\",\n              }).format(new Date(forecast[day][0].dt_txt))}\n            </h5>\n            <div className=\"accordion\">\n              {/* {forecast[day].map((element, i) => {\n                return (\n                  <Card key={i} data={element} onSelectCard={onChangeTime} />\n                );\n              })} */}\n              <Card key={i} data={forecast[day][0]} onSelectCard={onChangeTime} />\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}