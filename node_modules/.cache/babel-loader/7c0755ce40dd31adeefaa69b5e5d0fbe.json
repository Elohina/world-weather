{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/el20064544/projects/dublin-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/el20064544/projects/dublin-weather/src/components/CardDetail/CardDetail.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  \\n  div p {\\n    font-size: 2rem;\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  \\n  h6, p {\\n    font-size: 2rem;\\n    color: black;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 70%; \\n  margin: 4rem auto;\\n  padding: 0;\\n\\n  @media(max-width: 576px) {\\n    width: 100%;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.5em;\\n  margin-top: 1em;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 6em;\\n  color: #110d3c;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 50%;\\n  padding: 3em;\\n  text-align: center;\\n\\n  p {\\n    font-size: 1.6rem;\\n    color: #515454;\\n  }\\n\\n  @media(max-width: 75em) {\\n    width: 100%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from \"react\";\nimport HourlyForecast from '../HourlyForecast/HourlyForecast';\nimport styled from 'styled-components';\nconst StyledCardDetail = styled.div(_templateObject());\nconst TemperatureStyle = styled.h1(_templateObject2());\nconst UnitStyle = styled.div(_templateObject3());\nconst ListContainer = styled.ul(_templateObject4());\nconst ListItem = styled.li(_templateObject5());\nconst CurrentInfo = styled.div(_templateObject6());\nconst IMG_SRC = \"http://openweathermap.org/img/wn/\";\n\nconst CardDetail = ({\n  selectedDay,\n  selected_card,\n  isToday,\n  address\n}) => /*#__PURE__*/React.createElement(StyledCardDetail, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }\n}, selected_card && selected_card.dt && /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(CurrentInfo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: IMG_SRC + selected_card.weather[0].icon + \"@2x.png\",\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }\n}, isToday ? \"Today\" : new Intl.DateTimeFormat(\"en-GB\", {\n  weekday: \"short\"\n}).format(new Date(selected_card.dt_txt))), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }\n}, new Intl.DateTimeFormat(\"en-GB\", {\n  timeZone: \"GMT\",\n  hour12: true,\n  hour: \"numeric\",\n  minute: \"numeric\"\n}).format(new Date(selected_card.dt_txt))))), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TemperatureStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 11\n  }\n}, selected_card.main.temp), /*#__PURE__*/React.createElement(UnitStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 11\n  }\n}, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }\n}, address), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }\n}, \"Feels like \", selected_card.main.feels_like), /*#__PURE__*/React.createElement(HourlyForecast, {\n  hourlyForecast: selectedDay,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ListContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 13\n  }\n}, \"Humidity\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 13\n  }\n}, selected_card.main.humidity, \"%\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 13\n  }\n}, \"Wind\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 13\n  }\n}, selected_card.wind.speed, \" km/h\")), selected_card.rain && selected_card.rain[\"3h\"] && /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 15\n  }\n}, \"Rain\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 15\n  }\n}, \"Last 3h:\", \" \", new Intl.NumberFormat(\"en-GB\", {\n  maximumFractionDigits: 2\n}).format(selected_card.rain[\"3h\"]), \" \", \"mm\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 13\n  }\n}, \"Maximun Temp.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 13\n  }\n}, selected_card.main.temp_max, \"\\xB0\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 13\n  }\n}, \"Minimum Temp.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 13\n  }\n}, selected_card.main.temp_min, \"\\xB0\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 13\n  }\n}, \"Pressure\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 13\n  }\n}, selected_card.main.pressure, \" hPa\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 13\n  }\n}, \"Sea level\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 13\n  }\n}, selected_card.main.sea_level, \" hPa\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 13\n  }\n}, \"Ground level\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 13\n  }\n}, selected_card.main.grnd_level, \" hPa\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 13\n  }\n}, \"Wind\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 13\n  }\n}, \"Speed: \", selected_card.wind.speed, \"m/s\")))));\n\nexport default CardDetail;","map":{"version":3,"sources":["/Users/el20064544/projects/dublin-weather/src/components/CardDetail/CardDetail.js"],"names":["React","Fragment","HourlyForecast","styled","StyledCardDetail","div","TemperatureStyle","h1","UnitStyle","ListContainer","ul","ListItem","li","CurrentInfo","IMG_SRC","CardDetail","selectedDay","selected_card","isToday","address","dt","weather","icon","Intl","DateTimeFormat","weekday","format","Date","dt_txt","timeZone","hour12","hour","minute","display","alignItems","justifyContent","main","temp","feels_like","humidity","wind","speed","rain","NumberFormat","maximumFractionDigits","temp_max","temp_min","pressure","sea_level","grnd_level"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAV,mBAAtB;AAeA,MAAMC,gBAAgB,GAAGH,MAAM,CAACI,EAAV,oBAAtB;AAKA,MAAMC,SAAS,GAAGL,MAAM,CAACE,GAAV,oBAAf;AAKA,MAAMI,aAAa,GAAGN,MAAM,CAACO,EAAV,oBAAnB;AAUA,MAAMC,QAAQ,GAAGR,MAAM,CAACS,EAAV,oBAAd;AAUA,MAAMC,WAAW,GAAGV,MAAM,CAACE,GAAV,oBAAjB;AAUA,MAAMS,OAAO,GAAG,mCAAhB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA;AAAvC,CAAD,kBACjB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,aAAa,IAAIA,aAAa,CAACG,EAA/B,iBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACE,EAAA,GAAG,EAAEN,OAAO,GAAGG,aAAa,CAACI,OAAd,CAAsB,CAAtB,EAAyBC,IAAnC,GAA0C,SADjD;AAEE,EAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGJ,OAAO,aAEJ,IAAIK,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAjC,EAEGC,MAFH,CAEU,IAAIC,IAAJ,CAASV,aAAa,CAACW,MAAvB,CAFV,CAHN,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,IAAIL,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCK,EAAAA,QAAQ,EAAE,KADsB;AAEhCC,EAAAA,MAAM,EAAE,IAFwB;AAGhCC,EAAAA,IAAI,EAAE,SAH0B;AAIhCC,EAAAA,MAAM,EAAE;AAJwB,CAAjC,EAKEN,MALF,CAKS,IAAIC,IAAJ,CAASV,aAAa,CAACW,MAAvB,CALT,CADH,CARF,CALF,CADF,eAwBE;AAAK,EAAA,KAAK,EAAE;AAACK,IAAAA,OAAO,EAAE,MAAV;AAAkBC,IAAAA,UAAU,EAAE,YAA9B;AAA4CC,IAAAA,cAAc,EAAE;AAA5D,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGlB,aAAa,CAACmB,IAAd,CAAmBC,IADtB,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CAxBF,eA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKlB,OAAL,CA9BF,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeF,aAAa,CAACmB,IAAd,CAAmBE,UAAlC,CA/BF,eAgCE,oBAAC,cAAD;AAAgB,EAAA,cAAc,EAAEtB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhCF,eAiCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIC,aAAa,CAACmB,IAAd,CAAmBG,QAAvB,MAFF,CADF,eAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGtB,aAAa,CAACuB,IAAd,CAAmBC,KADtB,UAFF,CALF,EAWGxB,aAAa,CAACyB,IAAd,IAAsBzB,aAAa,CAACyB,IAAd,CAAmB,IAAnB,CAAtB,iBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACW,GADX,EAEG,IAAInB,IAAI,CAACoB,YAAT,CAAsB,OAAtB,EAA+B;AAC9BC,EAAAA,qBAAqB,EAAE;AADO,CAA/B,EAEElB,MAFF,CAEST,aAAa,CAACyB,IAAd,CAAmB,IAAnB,CAFT,CAFH,EAIuC,GAJvC,OAFF,CAZJ,eAuBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIzB,aAAa,CAACmB,IAAd,CAAmBS,QAAvB,SAFF,CAvBF,eA2BE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAI5B,aAAa,CAACmB,IAAd,CAAmBU,QAAvB,SAFF,CA3BF,eA+BE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG7B,aAAa,CAACmB,IAAd,CAAmBW,QADtB,SAFF,CA/BF,eAqCE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG9B,aAAa,CAACmB,IAAd,CAAmBY,SADtB,SAFF,CArCF,eA2CE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG/B,aAAa,CAACmB,IAAd,CAAmBa,UADtB,SAFF,CA3CF,eAiDE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACUhC,aAAa,CAACuB,IAAd,CAAmBC,KAD7B,QAFF,CAjDF,CAjCF,CAFJ,CADF;;AAiGA,eAAe1B,UAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport HourlyForecast from '../HourlyForecast/HourlyForecast';\n\nimport styled from 'styled-components';\n\nconst StyledCardDetail = styled.div`\n  width: 50%;\n  padding: 3em;\n  text-align: center;\n\n  p {\n    font-size: 1.6rem;\n    color: #515454;\n  }\n\n  @media(max-width: 75em) {\n    width: 100%;\n  }\n`;\n\nconst TemperatureStyle = styled.h1`\n  font-size: 6em;\n  color: #110d3c;\n`;\n\nconst UnitStyle = styled.div`\n  font-size: 1.5em;\n  margin-top: 1em;\n`;\n\nconst ListContainer = styled.ul`\n  width: 70%; \n  margin: 4rem auto;\n  padding: 0;\n\n  @media(max-width: 576px) {\n    width: 100%;\n  }\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  \n  h6, p {\n    font-size: 2rem;\n    color: black;\n  }\n`;\n\nconst CurrentInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  div p {\n    font-size: 2rem;\n  }\n`;\n\nconst IMG_SRC = \"http://openweathermap.org/img/wn/\";\n\nconst CardDetail = ({ selectedDay, selected_card, isToday, address }) => (\n  <StyledCardDetail>\n    {selected_card && selected_card.dt && (\n      <Fragment>\n        <CurrentInfo>\n          <img\n            src={IMG_SRC + selected_card.weather[0].icon + \"@2x.png\"}\n            alt=\"\"\n          />\n          <div>\n            <h3>\n              {isToday\n                ? `Today`\n                : new Intl.DateTimeFormat(\"en-GB\", {\n                    weekday: \"short\",\n                  }).format(new Date(selected_card.dt_txt))}\n            </h3>\n            <p >\n              {new Intl.DateTimeFormat(\"en-GB\", {\n                timeZone: \"GMT\",\n                hour12: true,\n                hour: \"numeric\",\n                minute: \"numeric\",\n              }).format(new Date(selected_card.dt_txt))}\n            </p>\n          </div>\n        </CurrentInfo>\n        <div style={{display: 'flex', alignItems: 'flex-start', justifyContent: 'center'}}>\n          <TemperatureStyle>\n            {selected_card.main.temp}\n          </TemperatureStyle>\n          <UnitStyle>°C</UnitStyle>\n        </div>\n        <h4>{address}</h4>\n        <p>Feels like {selected_card.main.feels_like}</p>\n        <HourlyForecast hourlyForecast={selectedDay} />\n        <ListContainer>\n          <ListItem>\n            <h6>Humidity</h6>\n            <p>{selected_card.main.humidity}%</p>\n          </ListItem>\n          <ListItem>\n            <h6>Wind</h6>\n            <p>\n              {selected_card.wind.speed} km/h\n            </p>\n          </ListItem>\n          {selected_card.rain && selected_card.rain[\"3h\"] && (\n            <ListItem>\n              <h6>Rain</h6>\n              <p>\n                Last 3h:{\" \"}\n                {new Intl.NumberFormat(\"en-GB\", {\n                  maximumFractionDigits: 2,\n                }).format(selected_card.rain[\"3h\"])}{\" \"}\n                mm\n              </p>\n            </ListItem>\n          )}\n          <ListItem>\n            <h6>Maximun Temp.</h6>\n            <p>{selected_card.main.temp_max}°</p>\n          </ListItem>\n          <ListItem>\n            <h6>Minimum Temp.</h6>\n            <p>{selected_card.main.temp_min}°</p>\n          </ListItem>\n          <ListItem>\n            <h6>Pressure</h6>\n            <p>\n              {selected_card.main.pressure} hPa\n            </p>\n          </ListItem>\n          <ListItem>\n            <h6>Sea level</h6>\n            <p>\n              {selected_card.main.sea_level} hPa\n            </p>\n          </ListItem>\n          <ListItem>\n            <h6>Ground level</h6>\n            <p>\n              {selected_card.main.grnd_level} hPa\n            </p>\n          </ListItem>\n          <ListItem>\n            <h6>Wind</h6>\n            <p>\n              Speed: {selected_card.wind.speed}m/s\n            </p>\n          </ListItem>\n        </ListContainer>\n      </Fragment>\n    )}\n  </StyledCardDetail>\n);\n\nexport default CardDetail;\n"]},"metadata":{},"sourceType":"module"}