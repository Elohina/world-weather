{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/el20064544/projects/dublin-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/el20064544/projects/dublin-weather/src/components/CardDetail/CardDetail.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.5em;\\n  margin-top: 1em;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 6em;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from 'styled-components';\nconst TemperatureStyle = styled.h1(_templateObject());\nconst UnitStyle = styled.div(_templateObject2());\nconst ListItem = styled.li(_templateObject3());\nconst IMG_SRC = \"http://openweathermap.org/img/wn/\";\n\nconst CardDetail = ({\n  selected_card,\n  isToday,\n  address\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    width: '40%',\n    padding: '3rem',\n    textAlign: 'center'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, selected_card && selected_card.dt && /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: IMG_SRC + selected_card.weather[0].icon + \"@2x.png\",\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  className: isToday ? \"text-primary\" : \"text-dark\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 15\n  }\n}, isToday ? \"Today\" : new Intl.DateTimeFormat(\"en-GB\", {\n  weekday: \"short\"\n}).format(new Date(selected_card.dt_txt))), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"lead\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 15\n  }\n}, new Intl.DateTimeFormat(\"en-GB\", {\n  timeZone: \"GMT\",\n  hour12: true,\n  hour: \"numeric\",\n  minute: \"numeric\"\n}).format(new Date(selected_card.dt_txt))))), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(TemperatureStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }\n}, new Intl.NumberFormat(\"en-GB\", {\n  maximumFractionDigits: 0\n}).format(selected_card.main.temp)), /*#__PURE__*/React.createElement(UnitStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }\n}, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    textAlign: 'center'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }\n}, address), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }\n}, \"Feels like \", selected_card.main.feels_like, \" \\u2022 Sunset \"))), /*#__PURE__*/React.createElement(\"ul\", {\n  style: {\n    width: '70%',\n    margin: '0 auto'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 15\n  }\n}, \"Humidity\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 15\n  }\n}, selected_card.main.humidity, \"%\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 15\n  }\n}, \"Wind\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 15\n  }\n}, selected_card.wind.speed, \" km/h\")), selected_card.rain && selected_card.rain[\"3h\"] && /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 17\n  }\n}, \"Rain\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 17\n  }\n}, \"Last 3h:\", \" \", new Intl.NumberFormat(\"en-GB\", {\n  maximumFractionDigits: 2\n}).format(selected_card.rain[\"3h\"]), \" \", \"mm\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 15\n  }\n}, \"Maximun Temp.\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 15\n  }\n}, selected_card.main.temp_max, \"\\xB0\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 15\n  }\n}, \"Minimum Temp.\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 15\n  }\n}, selected_card.main.temp_min, \"\\xB0\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 15\n  }\n}, \"Pressure\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 15\n  }\n}, selected_card.main.pressure, \" hPa\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 15\n  }\n}, \"Sea level\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 15\n  }\n}, selected_card.main.sea_level, \" hPa\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 15\n  }\n}, \"Ground level\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 15\n  }\n}, selected_card.main.grnd_level, \" hPa\")), /*#__PURE__*/React.createElement(ListItem, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 15\n  }\n}, \"Wind\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"text-muted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 15\n  }\n}, \"Speed: \", selected_card.wind.speed, \"m/s\")))));\n\nexport default CardDetail;","map":{"version":3,"sources":["/Users/el20064544/projects/dublin-weather/src/components/CardDetail/CardDetail.js"],"names":["React","styled","TemperatureStyle","h1","UnitStyle","div","ListItem","li","IMG_SRC","CardDetail","selected_card","isToday","address","width","padding","textAlign","dt","display","alignItems","justifyContent","weather","icon","Intl","DateTimeFormat","weekday","format","Date","dt_txt","timeZone","hour12","hour","minute","NumberFormat","maximumFractionDigits","main","temp","feels_like","margin","humidity","wind","speed","rain","temp_max","temp_min","pressure","sea_level","grnd_level"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport styled from 'styled-components';\n\nconst TemperatureStyle = styled.h1`\n  font-size: 6em;\n`;\n\nconst UnitStyle = styled.div`\n  font-size: 1.5em;\n  margin-top: 1em;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst IMG_SRC = \"http://openweathermap.org/img/wn/\";\n\nconst CardDetail = ({ selected_card, isToday, address }) => (\n  <div style={{width: '40%', padding: '3rem', textAlign: 'center'}}>\n    {selected_card && selected_card.dt && (\n      <div>\n        <div>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            <img\n              src={IMG_SRC + selected_card.weather[0].icon + \"@2x.png\"}\n              alt=\"\"\n            />\n            <div>\n              <h3 className={isToday ? \"text-primary\" : \"text-dark\"}>\n                {isToday\n                  ? `Today`\n                  : new Intl.DateTimeFormat(\"en-GB\", {\n                      weekday: \"short\",\n                    }).format(new Date(selected_card.dt_txt))}\n              </h3>\n              <p className=\"lead\">\n                {new Intl.DateTimeFormat(\"en-GB\", {\n                  timeZone: \"GMT\",\n                  hour12: true,\n                  hour: \"numeric\",\n                  minute: \"numeric\",\n                }).format(new Date(selected_card.dt_txt))}\n              </p>\n            </div>\n          </div>\n          <div style={{display: 'flex', alignItems: 'flex-start', justifyContent: 'center'}}>\n            <TemperatureStyle>\n              {new Intl.NumberFormat(\"en-GB\", {\n                maximumFractionDigits: 0,\n              }).format(selected_card.main.temp)}\n            </TemperatureStyle>\n            <UnitStyle>°C</UnitStyle>\n          </div>\n          <div style={{textAlign: 'center'}}>\n            <h4>{address}</h4>\n            <p>Feels like {selected_card.main.feels_like} • Sunset {}</p>\n          </div>\n        </div>\n          <ul style={{width: '70%', margin: '0 auto'}}>\n            <ListItem>\n              <h6>Humidity</h6>\n              <p className=\"text-muted\">{selected_card.main.humidity}%</p>\n            </ListItem>\n            <ListItem>\n              <h6>Wind</h6>\n              <p className=\"text-muted\">\n                {selected_card.wind.speed} km/h\n              </p>\n            </ListItem>\n            {selected_card.rain && selected_card.rain[\"3h\"] && (\n              <ListItem>\n                <h6>Rain</h6>\n                <p className=\"text-muted\">\n                  Last 3h:{\" \"}\n                  {new Intl.NumberFormat(\"en-GB\", {\n                    maximumFractionDigits: 2,\n                  }).format(selected_card.rain[\"3h\"])}{\" \"}\n                  mm\n                </p>\n              </ListItem>\n            )}\n            <ListItem>\n              <h6>Maximun Temp.</h6>\n              <p className=\"text-muted\">{selected_card.main.temp_max}°</p>\n            </ListItem>\n            <ListItem>\n              <h6>Minimum Temp.</h6>\n              <p className=\"text-muted\">{selected_card.main.temp_min}°</p>\n            </ListItem>\n            <ListItem>\n              <h6>Pressure</h6>\n              <p className=\"text-muted\">\n                {selected_card.main.pressure} hPa\n              </p>\n            </ListItem>\n            <ListItem>\n              <h6>Sea level</h6>\n              <p className=\"text-muted\">\n                {selected_card.main.sea_level} hPa\n              </p>\n            </ListItem>\n            <ListItem>\n              <h6>Ground level</h6>\n              <p className=\"text-muted\">\n                {selected_card.main.grnd_level} hPa\n              </p>\n            </ListItem>\n            <ListItem>\n              <h6>Wind</h6>\n              <p className=\"text-muted\">\n                Speed: {selected_card.wind.speed}m/s\n              </p>\n            </ListItem>\n          </ul>\n      </div>\n    )}\n  </div>\n);\n\nexport default CardDetail;\n"]},"metadata":{},"sourceType":"module"}