{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/el20064544/projects/dublin-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/el20064544/projects/dublin-weather/src/components/Card/Card.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #6c757d;\\n  font-size: 1.25rem;\\n  margin-bottom: .5rem;\\n  font-family: inherit;\\n  font-weight: 500;\\n  line-height: 1.2;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #343a40;\\n  font-size: 1.75rem;\\n  margin-bottom: .5rem;\\n  font-family: inherit;\\n  font-weight: 500;\\n  line-height: 1.2;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from 'styled-components';\nconst WeekdayText = styled.h3(_templateObject());\nconst DateText = styled.h5(_templateObject2());\nconst StyledCard = styled.div(_templateObject3());\nconst IMG_SRC = \"http://openweathermap.org/img/w/\";\n\nconst Card = ({\n  dateLabel,\n  data,\n  onSelectCard,\n  isToday\n}) => {\n  const showDetail = () => {\n    onSelectCard(data);\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCard, {\n    onClick: () => showDetail(),\n    id: data.dt + \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WeekdayText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, isToday(dateLabel) ? \"Today\" : new Intl.DateTimeFormat(\"en-GB\", {\n    weekday: \"long\"\n  }).format(new Date(data.dt_txt))), /*#__PURE__*/React.createElement(DateText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"numeric\",\n    month: \"short\",\n    year: \"2-digit\"\n  }).format(new Date(data.dt_txt)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IMG_SRC + data.weather[0].icon + \".png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, new Intl.NumberFormat(\"en-GB\", {\n    maximumFractionDigits: 0\n  }).format(data.main.temp), \"\\xB0\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, data.weather[0].main), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, new Intl.DateTimeFormat(\"en-GB\", {\n    timeZone: \"GMT\",\n    hour12: true,\n    hour: \"numeric\",\n    minute: \"numeric\"\n  }).format(new Date(data.dt_txt)))));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/el20064544/projects/dublin-weather/src/components/Card/Card.js"],"names":["React","styled","WeekdayText","h3","DateText","h5","StyledCard","div","IMG_SRC","Card","dateLabel","data","onSelectCard","isToday","showDetail","dt","Intl","DateTimeFormat","weekday","format","Date","dt_txt","day","month","year","weather","icon","NumberFormat","maximumFractionDigits","main","temp","timeZone","hour12","hour","minute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,EAAV,mBAAjB;AASA,MAAMC,QAAQ,GAAGH,MAAM,CAACI,EAAV,oBAAd;AASA,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAV,oBAAhB;AAMA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,YAAlB;AAAgCC,EAAAA;AAAhC,CAAD,KAA8C;AAEzD,QAAMC,UAAU,GAAE,MAAM;AACtBF,IAAAA,YAAY,CAACD,IAAD,CAAZ;AACD,GAFD;;AAIA,sBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAMG,UAAU,EAArC;AAAyC,IAAA,EAAE,EAAEH,IAAI,CAACI,EAAL,GAAU,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,OAAO,CAACH,SAAD,CAAP,GACA,OADA,GAEA,IAAIM,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC/BC,IAAAA,OAAO,EAAE;AADsB,GAAjC,EAEGC,MAFH,CAEU,IAAIC,IAAJ,CAAST,IAAI,CAACU,MAAd,CAFV,CAHJ,CADF,eASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIL,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCK,IAAAA,GAAG,EAAE,SAD2B;AAEhCC,IAAAA,KAAK,EAAE,OAFyB;AAGhCC,IAAAA,IAAI,EAAE;AAH0B,GAAjC,EAIEL,MAJF,CAIS,IAAIC,IAAJ,CAAST,IAAI,CAACU,MAAd,CAJT,CADH,CATF,CADF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEb,OAAO,GAAGG,IAAI,CAACc,OAAL,CAAa,CAAb,EAAgBC,IAA1B,GAAiC,MADxC;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIV,IAAI,CAACW,YAAT,CAAsB,OAAtB,EAA+B;AAC9BC,IAAAA,qBAAqB,EAAE;AADO,GAA/B,EAEET,MAFF,CAESR,IAAI,CAACkB,IAAL,CAAUC,IAFnB,CADH,SADF,CAPF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInB,IAAI,CAACc,OAAL,CAAa,CAAb,EAAgBI,IAApB,CAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIb,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCc,IAAAA,QAAQ,EAAE,KADsB;AAEhCC,IAAAA,MAAM,EAAE,IAFwB;AAGhCC,IAAAA,IAAI,EAAE,SAH0B;AAIhCC,IAAAA,MAAM,EAAE;AAJwB,GAAjC,EAKEf,MALF,CAKS,IAAIC,IAAJ,CAAST,IAAI,CAACU,MAAd,CALT,CADH,CAhBF,CAlBF,CADF;AA8CD,CApDD;;AAsDA,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\n\nconst WeekdayText = styled.h3`\n  color: #343a40;\n  font-size: 1.75rem;\n  margin-bottom: .5rem;\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nconst DateText = styled.h5`\n  color: #6c757d;\n  font-size: 1.25rem;\n  margin-bottom: .5rem;\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nconst StyledCard = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst IMG_SRC = \"http://openweathermap.org/img/w/\";\n\nconst Card = ({dateLabel, data, onSelectCard, isToday}) => {\n\n  const showDetail= () => {\n    onSelectCard(data);\n  }\n  \n  return (\n    <StyledCard onClick={() => showDetail()} id={data.dt + \"heading\"}>\n      <div>\n        <WeekdayText>\n          { isToday(dateLabel) ?\n            \"Today\" :\n            new Intl.DateTimeFormat(\"en-GB\", {\n              weekday: \"long\",\n            }).format(new Date(data.dt_txt))\n          }\n        </WeekdayText>\n        <DateText>\n          {new Intl.DateTimeFormat(\"en-GB\", {\n            day: \"numeric\",\n            month: \"short\",\n            year: \"2-digit\",\n          }).format(new Date(data.dt_txt))}\n        </DateText>\n      </div>\n      <div>\n        <div>\n          <img\n            src={IMG_SRC + data.weather[0].icon + \".png\"}\n            alt=\"\"\n          />\n        </div>\n        <div>\n          <h1>\n            {new Intl.NumberFormat(\"en-GB\", {\n              maximumFractionDigits: 0,\n            }).format(data.main.temp)}\n            Â°\n          </h1>\n        </div>\n        <p>{data.weather[0].main}</p>\n        <p>\n          {new Intl.DateTimeFormat(\"en-GB\", {\n            timeZone: \"GMT\",\n            hour12: true,\n            hour: \"numeric\",\n            minute: \"numeric\",\n          }).format(new Date(data.dt_txt))}\n        </p>\n      </div>\n    </StyledCard>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}