{"ast":null,"code":"var _jsxFileName = \"/Users/el20064544/projects/dublin-weather/src/components/Forecast/Forecast.js\";\nimport React, { Fragment } from \"react\";\nimport Card from \"../Card/Card\";\n\nconst Forecast = ({\n  forecast,\n  onChangeTime,\n  isToday: _isToday\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, Object.keys(forecast).map((day, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      data: forecast[day][0],\n      onSelectCard: onChangeTime,\n      dateLabel: forecast[day][0].date_label,\n      isToday: () => _isToday,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, forecast[day][0].date_label)));\n  }));\n};\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/el20064544/projects/dublin-weather/src/components/Forecast/Forecast.js"],"names":["React","Fragment","Card","Forecast","forecast","onChangeTime","isToday","Object","keys","map","day","i","date_label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA,OAAO,EAAPA;AAA1B,CAAD,KAAyC;AACxD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,GAAtB,CAA0B,CAACC,GAAD,EAAMC,CAAN,KAAY;AACrC,wBACE;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,IAAI,EAAEP,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,CAApB;AAAsC,MAAA,YAAY,EAAEL,YAApD;AAAkE,MAAA,SAAS,EAAED,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,EAAiBE,UAA9F;AAA0G,MAAA,OAAO,EAAE,MAAKN,QAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,QAAQ,CAACM,GAAD,CAAR,CAAc,CAAd,EAAiBE,UAArB,CAPF,CADF,CADF;AAaD,GAdA,CADH,CADF;AAmBD,CApBD;;AAsBA,eAAeT,QAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport Card from \"../Card/Card\";\n\n\nconst Forecast = ({ forecast, onChangeTime, isToday }) => { \n  return (\n    <div>\n      {Object.keys(forecast).map((day, i) => {\n        return (\n          <div key={i}>\n            <div>\n              {/* {forecast[day].map((element, i) => {\n                return (\n                  <Card key={i} data={element} onSelectCard={onChangeTime} />\n                );\n              })} */}\n              <Card key={i} data={forecast[day][0]} onSelectCard={onChangeTime} dateLabel={forecast[day][0].date_label} isToday={()=>(isToday)}/>\n              <p>{forecast[day][0].date_label}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}