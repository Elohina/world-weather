{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/el20064544/projects/dublin-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/el20064544/projects/dublin-weather/src/components/Card/Card.js\";\n\nfunction _templateObject8() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #de5555;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #2e40c7;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #343a40;\\n  margin-bottom: .5rem;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 2rem;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: '8rem';\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  justify-content: space-between;\\n  padding: 1.5rem;\\n  border-radius: 5px;\\n  cursor: pointer;\\n\\n  :hover {\\n    background-color: rgba(255,255,255,0.24);\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #515454;\\n  margin-bottom: .5rem;\\n  font-family: inherit;\\n  font-weight: 500;\\n  line-height: 1.2;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  color: #343a40;\\n  margin-bottom: .5rem;\\n  font-weight: 500;\\n  line-height: 1.2;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { getImgURL } from '../../api/weatherApi';\nconst WeekdayText = styled.h4(_templateObject());\nconst DateText = styled.h5(_templateObject2());\nconst StyledCard = styled.div(_templateObject3());\nconst CardColumn = styled.div(_templateObject4());\nconst NumberText = styled.p(_templateObject5());\nconst DescriptionText = styled.p(_templateObject6());\nconst MinTemp = styled(NumberText)(_templateObject7());\nconst MaxTemp = styled(NumberText)(_templateObject8());\n\nconst Card = ({\n  dateLabel,\n  data,\n  onSelectCard,\n  isToday\n}) => {\n  const showDetail = () => {\n    onSelectCard(data, dateLabel);\n  };\n\n  return /*#__PURE__*/React.createElement(StyledCard, {\n    onClick: () => showDetail(),\n    id: data.dt + \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardColumn, {\n    style: {\n      alignItems: 'start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WeekdayText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, isToday(dateLabel) ? \"Today\" : new Intl.DateTimeFormat(\"en-GB\", {\n    weekday: \"long\"\n  }).format(new Date(data.dt_txt))), /*#__PURE__*/React.createElement(DateText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, new Intl.DateTimeFormat(\"en-GB\", {\n    day: \"numeric\",\n    month: \"short\",\n    year: \"2-digit\"\n  }).format(new Date(data.dt_txt)))), /*#__PURE__*/React.createElement(CardColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: getImgURL(data.weather[0].icon),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DescriptionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, data.weather[0].main)), /*#__PURE__*/React.createElement(CardColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NumberText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, data.clouds.all, \"%\"), /*#__PURE__*/React.createElement(DescriptionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Clouds\")), /*#__PURE__*/React.createElement(CardColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MinTemp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, data.main.temp_min, \"\\xB0C\"), /*#__PURE__*/React.createElement(MaxTemp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, data.main.temp_max, \"\\xB0C\")));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/el20064544/projects/dublin-weather/src/components/Card/Card.js"],"names":["React","styled","getImgURL","WeekdayText","h4","DateText","h5","StyledCard","div","CardColumn","NumberText","p","DescriptionText","MinTemp","MaxTemp","Card","dateLabel","data","onSelectCard","isToday","showDetail","dt","alignItems","Intl","DateTimeFormat","weekday","format","Date","dt_txt","day","month","year","weather","icon","main","clouds","all","temp_min","temp_max"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\nimport { getImgURL } from '../../api/weatherApi';\n\nconst WeekdayText = styled.h4`\n  color: #343a40;\n  margin-bottom: .5rem;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nconst DateText = styled.h5`\n  color: #515454;\n  margin-bottom: .5rem;\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nconst StyledCard = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  padding: 1.5rem;\n  border-radius: 5px;\n  cursor: pointer;\n\n  :hover {\n    background-color: rgba(255,255,255,0.24);\n  }\n`;\n\nconst CardColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: '8rem';\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NumberText = styled.p`\n  font-size: 2rem;\n`;\n\nconst DescriptionText = styled.p`\n  color: #343a40;\n  margin-bottom: .5rem;\n`;\n\nconst MinTemp = styled(NumberText)`\n  color: #2e40c7;\n`;\n\nconst MaxTemp = styled(NumberText)`\n  color: #de5555;\n`;\n\n\nconst Card = ({dateLabel, data, onSelectCard, isToday}) => {\n\n  const showDetail= () => {\n    onSelectCard(data, dateLabel);\n  }\n  \n  return (\n    <StyledCard onClick={() => showDetail()} id={data.dt + \"heading\"}>\n      <CardColumn style={{alignItems: 'start'}}>\n        <WeekdayText>\n          { isToday(dateLabel) ?\n            \"Today\" :\n            new Intl.DateTimeFormat(\"en-GB\", {\n              weekday: \"long\",\n            }).format(new Date(data.dt_txt))\n          }\n        </WeekdayText>\n        <DateText>\n          {new Intl.DateTimeFormat(\"en-GB\", {\n            day: \"numeric\",\n            month: \"short\",\n            year: \"2-digit\",\n          }).format(new Date(data.dt_txt))}\n        </DateText>\n      </CardColumn>\n      <CardColumn>\n        <img\n          src={getImgURL(data.weather[0].icon)}\n          alt=\"\"\n        />\n        <DescriptionText>{data.weather[0].main}</DescriptionText>\n      </CardColumn>\n      <CardColumn>\n        <NumberText>{data.clouds.all}%</NumberText>\n        <DescriptionText>Clouds</DescriptionText>\n      </CardColumn>\n      <CardColumn>\n        <MinTemp>\n          {data.main.temp_min}°C\n        </MinTemp>\n        <MaxTemp>\n          {data.main.temp_max}°C\n        </MaxTemp>\n      </CardColumn>\n      {/* <div>\n        <p>\n          {new Intl.DateTimeFormat(\"en-GB\", {\n            timeZone: \"GMT\",\n            hour12: true,\n            hour: \"numeric\",\n            minute: \"numeric\",\n          }).format(new Date(data.dt_txt))}\n        </p>\n      </div> */}\n    </StyledCard>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}